%YAML:1.0

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -3.5
Viewer.ViewpointF: 500

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "PinHole"

# Left Camera calibration and distortion parameters (OpenCV)
# intrinsics: [385.66103518675095, 385.366100052357, 324.7120441702525, 237.31579427124345]
Camera.fx: 385.66103518675095
Camera.fy: 385.366100052357
Camera.cx: 324.7120441702525
Camera.cy: 237.31579427124345

# distortion parameters
# distortion_coeffs: [0.006748400587261457, -0.0018373064863327203, 0.002283150755320981, 0.003926084835844248]
Camera.k1: 0.006748400587261457
Camera.k2: -0.0018373064863327203
Camera.p1: 0.002283150755320981
Camera.p2: 0.003926084835844248

# Right Camera calibration and distortion parameters (OpenCV)
Camera2.fx: 382.613
Camera2.fy: 382.613
Camera2.cx: 320.183
Camera2.cy: 236.455

# distortion parameters
Camera2.k1: 0.0
Camera2.k2: 0.0
Camera2.p1: 0.0
Camera2.p2: 0.0

Tlr: !!opencv-matrix
  rows: 3
  cols: 4
  dt: f
  data: [1.0, 0.0, 0.0, 0.0499585,
         0.0, 1.0, 0.0, 0.0,
         0.0, 0.0, 1.0, 0.0,
         0.0, 0.0, 0.0, 1.0]


# Camera resolution
Camera.width: 640
Camera.height: 480

# Camera frames per second 
Camera.fps: 30.0

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Image scale, it changes the image size to be processed (<1.0: reduce, >1.0: increase)
Camera.imageScale: 0.5 # 0.5 #0.7071 # 1/sqrt(2)

# Close/Far threshold. Baseline times.
ThDepth: 40.0
# stereo baseline times fx
Camera.bf: 19.114771561

# Transformation from body-frame (imu) to left camera
# T_ic:  (cam0 to imu0): 
# [[ 0.99995384 -0.00250363  0.00927604 -0.00631307]
#  [ 0.00248492  0.99999486  0.0020274  -0.00251868]
#  [-0.00928107 -0.00200426  0.99995492  0.01189258]
#  [ 0.          0.          0.          1.        ]]
Tbc: !!opencv-matrix
   rows: 4
   cols: 4
   dt: f
   data: [ 0.99995384, -0.00250363,  0.00927604, -0.00631307,
          0.00248492,  0.99999486,  0.0020274,  -0.00251868,
         -0.00928107, -0.00200426,  0.99995492,  0.01189258,
          0.0,          0.0,          0.0,          1.0    ]
    #  data: [1,0,0,-0.005,
    #        0,1,0,-0.005,
    #        0,0,1,0.0117,
    #        0.0, 0.0, 0.0, 1.0] 


# Do not insert KFs when recently lost
InsertKFsWhenLost: 0

# IMU noise (Use those from VINS-mono)
IMU.NoiseGyro: 1e-3 # 2.44e-4 #1e-3 # rad/s^0.5
IMU.NoiseAcc: 1e-2 # 1.47e-3 #1e-2 # m/s^1.5
IMU.GyroWalk: 1e-6 # rad/s^1.5
IMU.AccWalk: 1e-4 # m/s^2.5
IMU.Frequency: 200

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------
# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1250

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

